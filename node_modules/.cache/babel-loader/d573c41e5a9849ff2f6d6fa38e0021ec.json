{"ast":null,"code":"var _jsxFileName = \"/home/rhythm/Documents/Pathfinder/src/PathfindingVisualizer/Node/Node.jsx\";\nimport React, { Component } from 'react';\nimport './Node.css';\nexport default class Node extends Component {\n  render() {\n    const _this$props = this.props,\n          col = _this$props.col,\n          isFinish = _this$props.isFinish,\n          isStart = _this$props.isStart,\n          isWall = _this$props.isWall,\n          onMouseClick = _this$props.onMouseClick,\n          row = _this$props.row;\n    const extraClassName = isFinish ? 'node-finish' : isStart ? 'node-start' : isWall ? 'node-wall' : '';\n    return React.createElement(\"div\", {\n      id: \"node-\".concat(row, \"-\").concat(col),\n      className: \"node \".concat(extraClassName),\n      onClick: () => onMouseClick(row, col),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    });\n  }\n\n}","map":{"version":3,"sources":["/home/rhythm/Documents/Pathfinder/src/PathfindingVisualizer/Node/Node.jsx"],"names":["React","Component","Node","render","props","col","isFinish","isStart","isWall","onMouseClick","row","extraClassName"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AAEA,OAAO,YAAP;AAEA,eAAe,MAAMC,IAAN,SAAmBD,SAAnB,CAA6B;AAC1CE,EAAAA,MAAM,GAAG;AAAA,wBACuD,KAAKC,KAD5D;AAAA,UACCC,GADD,eACCA,GADD;AAAA,UACMC,QADN,eACMA,QADN;AAAA,UACgBC,OADhB,eACgBA,OADhB;AAAA,UACyBC,MADzB,eACyBA,MADzB;AAAA,UACiCC,YADjC,eACiCA,YADjC;AAAA,UAC+CC,GAD/C,eAC+CA,GAD/C;AAEP,UAAMC,cAAc,GAAGL,QAAQ,GAAG,aAAH,GAAoBC,OAAO,GAAG,YAAH,GAAkBC,MAAM,GAAE,WAAF,GAAe,EAAjG;AACA,WACE;AACE,MAAA,EAAE,iBAAUE,GAAV,cAAiBL,GAAjB,CADJ;AAEE,MAAA,SAAS,iBAAUM,cAAV,CAFX;AAGE,MAAA,OAAO,EAAG,MAAKF,YAAY,CAACC,GAAD,EAAML,GAAN,CAH7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAOD;;AAXyC","sourcesContent":["import React, {Component} from 'react';\n\nimport './Node.css';\n\nexport default class Node extends Component {\n  render() {\n    const { col, isFinish, isStart, isWall, onMouseClick, row,} = this.props;\n    const extraClassName = isFinish ? 'node-finish': ( isStart ? 'node-start': (isWall? 'node-wall': ''));\n    return (\n      <div\n        id={`node-${row}-${col}`}\n        className={`node ${extraClassName}`}\n        onClick={ ()=> onMouseClick(row ,col) }\n        ></div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}